module.exports = {
  rules: {
    'array-bracket-newline': 'error',
    'array-bracket-spacing': ['error', 'never'],
    // 'array-element-newline': ['error', 'never'],
    'block-spacing': 'error',
    'brace-style': 'error',
    'camelcase': 'error',
    // 'capitalized-comments': 'error',
    // 'comma-dangle': [
    //   'error',
    //   {
    //     objects: 'always',
    //   },
    // ],
    'comma-spacing': ['error', { before: false, after: true }],
    // 'comma-style': 'error',
    'computed-property-spacing': ['error', 'never'],
    'consistent-this': 'error',
    'eol-last': 'error',
    'func-call-spacing': ['error', 'never'],
    'func-name-matching': 'error',
    'func-names': 'error',
    'func-style': ['error', 'declaration', { allowArrowFunctions: true }],
    // 'function-call-argument-newline': ['error', 'never'],
    // 'function-paren-newline': ['error', 'never'],
    'id-denylist': ['error', 'err', 'e', 'res', 'req', 'cmd', 'cb'],
    // 'id-length': 'error',
    // 'id-match': 'error',
    // 'implicit-arrow-linebreak': ['error', 'beside'],
    // indent: ['error', 2],
    'jsx-quotes': ['error', 'prefer-double'],
    'key-spacing': ['error', { afterColon: true, beforeColon: false }],
    'keyword-spacing': ['error', { after: true, before: true }],
    'line-comment-position': ['error', { position: 'above' }],
    'linebreak-style': ['error', 'unix'],
    // 'lines-around-comment': ['error', { beforeBlockComment: true, beforeLineComment: true }],
    'lines-between-class-members': 'error',
    // 'max-depth': 'error',
    // 'max-len': ['error', { code: 100, comments: 100 }],
    // 'max-lines': 'error',
    // 'max-lines-per-function': 'error',
    // 'max-nested-callbacks': 'error',
    // 'max-params': 'error',
    // 'max-statements': 'error',
    // 'max-statements-per-line': 'error',
    // 'multiline-comment-style': ['error', 'starred-block'],
    // 'multiline-ternary': ['error', 'never'],
    // 'new-cap': 'error',
    'new-parens': 'error',
    // 'newline-per-chained-call': ['error', { ignoreChainWithDepth: 1 }],
    'no-array-constructor': 'error',
    'no-bitwise': 'error',
    'no-continue': 'error',
    'no-inline-comments': 'error',
    'no-lonely-if': 'error',
    'no-mixed-operators': 'error',
    'no-mixed-spaces-and-tabs': 'error',
    'no-multi-assign': 'error',
    'no-multiple-empty-lines': ['error', { max: 1 }],
    'no-negated-condition': 'error',
    // 'no-nested-ternary': 'error',
    'no-new-object': 'error',
    'no-plusplus': 'error',
    // 'no-restricted-syntax': ['error', 'WithStatement'],
    'no-tabs': ['error', { allowIndentationTabs: true }],
    // 'no-ternary': 'error',
    'no-trailing-spaces': 'error',
    'no-underscore-dangle': 'error',
    'no-unneeded-ternary': 'error',
    'no-whitespace-before-property': 'error',
    'nonblock-statement-body-position': 'error',
    // 'object-curly-newline': ['error', 'never'],
    // 'object-curly-spacing': 'error',
    'object-property-newline': ['error', { allowAllPropertiesOnSameLine: true }],
    'one-var': ['error', 'never'],
    'one-var-declaration-per-line': 'error',
    'operator-assignment': ['error', 'always'],
    // 'operator-linebreak': 'error',
    'padded-blocks': ['error', 'never'],
    'padding-line-between-statements': ['error', { blankLine: 'always', prev: '*', next: 'return' }],
    'prefer-exponentiation-operator': 'error',
    'prefer-object-spread': 'error',
    // 'quote-props': ['error', 'as-needed'],
    // quotes: ['error', 'single'],
    // 'semi': ['error', 'never'],
    // 'semi-spacing': 'error',
    // 'semi-style': 'error',
    'sort-keys': ['error', 'asc', { caseSensitive: true, natural: false }],
    // 'sort-vars': 'error',
    // 'space-before-blocks': ['error', 'never'],
    // 'space-before-function-paren': ['error', 'never'],
    'space-in-parens': ['error', 'never'],
    'space-infix-ops': ['error', { int32Hint: false }],
    // 'space-unary-ops': 'error',
    'spaced-comment': ['error', 'always'],
    'switch-colon-spacing': 'error',
    'template-tag-spacing': ['error', 'never'],
    'unicode-bom': 'error',
    // 'wrap-regex': 'error',
  },
}
